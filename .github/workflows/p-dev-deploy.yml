name: "PIPELINE: Dev AWS EB Deploy"

env:
    EB_PACKAGE_S3_BUCKET_NAME : "test-goq-test-bucket"
    EB_APPLICATION_NAME : "qog-test-flask"
    EB_ENVIRONMENT_NAME : "Qog-test-flask-env-1"
    DEPLOY_PACKAGE : "test-app${{ github.sha }}.zip"
    AWS-REGION_NAME : "us-east-1"
    ACM_CERTIFICATE_ARN : "arn:aws:acm:us-east-1:975049960306:certificate/4d119f00-c518-45dc-ad30-18d064a72a80"

on:
    push:
        branches-ignore: [ main ]

jobs:
code_checks:
    name: "Run Code Checks"
    uses: ./.github/workflows/p-dev-code-checks.yml
    with:
      python-version: 3.11
      os: ubuntu-latest

      deploy_application_to_EB:
      needs: [code_checks]
        runs-on: ubuntu-latest
        steps:
          - name: AWS Credentials
            uses: aws-actions/configure-aws-credentials@v4
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
              aws-region: ${{ env.AWS-REGION_NAME }}
            
          - name: Checkout code
            uses: actions/checkout@v4 
            
          - name: Download environment resources  
            run: |
              aws s3 cp "s3://dev-deploy-resources/.env" "./"
              aws s3 cp "s3://dev-deploy-resources/sa-key.json" "./"
    
          - name: Create zip deployment package
            run: |
              zip -r ${{ env.DEPLOY_PACKAGE }} ./ -x "*.git*" ".pyest*" ".__pycache*" "venv" "tests*" "README.md"
    
          - name: Copy deployment package to S3 bucket
            run: aws s3 cp ${{ env.DEPLOY_PACKAGE }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
    
          - name: Create AWS EB Application
            run: aws elasticbeanstalk create-application-version --application-name ${{ env.EB_APPLICATION_NAME }} --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE }}" --version-label "Ver-${{ github.sha }}" --description "CommitSHA-${{ github.sha }}"
          
          - name: Deploy AWS EB Application
            run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
    
          - name: Attach AWS CM Certificate to Load Balancer
            run: |
              aws elbv2 describe-load-balancers --names ${{ env.EB_ENVIRONMENT_NAME }}-env | jq -r '.LoadBalancers[0].LoadBalancerArn' | xargs -I {} aws elbv2 create-listener --load-balancer-arn {} --protocol HTTPS --port 443 --certificates CertificateArn=${{ env.ACM_CERTIFICATE_ARN }} --default-actions Type=forward,TargetGroupArn=$(aws elbv2 describe-target-groups --names ${{ env.EB_ENVIRONMENT_NAME }}-env | jq -r '.TargetGroups[0].TargetGroupArn')
