name: Build and Test Code/Dependencies 

on: 
  push:
    branches-ignore: [ main ]

jobs:
    build:
      name: Build ${{matrix.python-version}} on ${{matrix.os}}
      runs-on: ${{matrix.os}}
      strategy:
        matrix:
          os: [ubuntu-latest]
          python-version: ["3.11", "3.12"]
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Python ${{matrix.python-version}}
          uses: actions/setup-python@v5
          with: 
            python-version: ${{matrix.python-version}}

        - name: Display Python version
          run: |
            python -c "import sys; print(sys.version)"
            
        - name: Install Dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            
    unit-test:
      name: Unit-Test ${{ github.actor_id }}
      needs: [build]
      runs-on: ${{matrix.os}}
      strategy:
        matrix:
          os: [ubuntu-latest]
          python-version: ["3.11", "3.12"]
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
                
        - name: Setup Python ${{matrix.python-version}}
          uses: actions/setup-python@v5
          with: 
              python-version: ${{matrix.python-version}}
                  
        - name: Display Python version
          run: |
            python -c "import sys; print(sys.version)"
    
        - name: Install Dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
        
        - name: Run Unit Tests with Pytest
          env:
            SENDER: ${{ github.environment.SENDER }}
            TO: ${{ github.environment.TO }}
            DEBUG: False
            SERVICE_ACCOUNT_FILE: ${{ github.environment.SERVICE_ACCOUNT_FILE }}
            SCOPES: ${{ github.environment.SCOPES }}
            USER_TO_IMPERSONATE: ${{ github.environment.USER_TO_IMPERSONATE }}
          run: |
              pytest -v
    lint:
      name: Lint code ${{ github.ref_name  }}
      needs: [unit-test]
      strategy:
        matrix:
          os: [ubuntu-latest]
          python-version: ["3.11", "3.12"]
      runs-on: ${{matrix.os}}
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Python ${{matrix.python-version}}
          uses: actions/setup-python@v5
          with: 
            python-version: ${{matrix.python-version}}

        - name: Display Python version
          run: |
            python -c "import sys; print(sys.version)"
        
        - name: Install Dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
        
        - name: Lint code with Flake8
          run: |
            flake8 --ignore=E501,F401
    
    security-code-review:
      name: Security code review ${{ github.action_status  }}
      needs: [lint]
      strategy:
        matrix:
          os: [ubuntu-latest]
          python-version: ["3.11", "3.12"]
      runs-on: ${{matrix.os}}
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Python ${{matrix.python-version}}
          uses: actions/setup-python@v5
          with: 
            python-version: ${{matrix.python-version}}

        - name: Display Python version
          run: |
            python -c "import sys; print(sys.version)"
        
        - name: Install Dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: Code security scan with Bandit
          run: |
            pip install bandit
            bandit -r . --skip B101

        - name: Audit all dependencies x1
          uses: pypa/gh-action-pip-audit@v1.1.0
          with:
            inputs: requirements.txt
            summary: true

        - name: Audit all dependencies x2
          uses: homoluctus/pip-audit-action@v1
          with:
            type: pip

        - name: URL Link Checker (mlc)
          uses: becheran/mlc@v0.18.0

        - name: Security check - Bandit
          uses: ioggstream/bandit-report-artifacts@v0.0.2
          with:
            project_path: .
            ignore_failure: true
      
        - name: Security check report artifacts
          uses: actions/upload-artifact@v1
          if: failure()
          with:
            name: Security report
            path: check_runs/security_report.txt